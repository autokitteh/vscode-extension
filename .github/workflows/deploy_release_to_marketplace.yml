name: Publish to VSCode Marketplace

on:
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        description: "Release type"
        options:
          - "pre-release"
          - "release"
        required: true

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  publish-to-marketplace:
    name: Publish to VSCode Marketplace
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          submodules: true
      - uses: actions/setup-node@v3
        with:
          node-version: "21.2.0"
          cache: "npm"
      - name: Pull submodule from remote
        run: git submodule update --init
      - name: Install dependencies
        run: npm ci
      - name: Run Tests
        run: npm run test:all
      - name: Compile and Build
        run: npm run compile:all && npm run build:all
      - name: Set Release Type
        run: echo "RELEASE_TYPE=${{ github.event.inputs['release-type'] }}" >> $GITHUB_ENV
      - name: Release and Tag a New Version
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          RELEASE_TYPE: ${{ env.RELEASE_TYPE }}
        run: npx semantic-release
      - name: Re-Compile and Build with New Version
        run: npm run compile:all && npm run build:all
      - name: Package & Publish VSCode Extension
        run: |
          VSCE_OPTIONS="--packagePath autokitteh.vsix"
          if [ "${{ github.event.inputs['release-type'] }}" == "pre-release" ]; then
            npx vsce package --pre-release -o autokitteh.vsix
            VSCE_OPTIONS="$VSCE_OPTIONS --pre-release"
          else
            npx vsce package -o autokitteh.vsix
          fi
          echo "Running vsce publish with options: $VSCE_OPTIONS"
          npx vsce publish -p ${{ secrets.VSCE_TOKEN }} $VSCE_OPTIONS
